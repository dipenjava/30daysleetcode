/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* middleNode(ListNode* head) {
        if(head==NULL)
        {
            return NULL;
        }
        ListNode* fast= head;
        ListNode* slow= head;
        while(slow!= NULL && fast!= NULL && fast->next!= NULL) // Check fast->next!= NULL
        {
            fast = fast->next->next; // Move fast pointer two steps ahead
            slow = slow->next; // Move slow pointer one step ahead
        }
        return slow;
    }
};
